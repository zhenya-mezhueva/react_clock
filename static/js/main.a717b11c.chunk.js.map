{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","timer","setInterval","setState","this","prevProps","props","name","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","clockName","Math","floor","random","setName","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA8CeA,E,4MA1CbC,MAAQ,CACNC,KAAM,IAAIC,M,EAGZC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CACZJ,KAAM,IAAIC,SAEX,K,kEAGD,OAAOI,KAAKH,Q,yCAGKI,GACbD,KAAKE,MAAMC,OAASF,EAAUE,MAEhCC,QAAQC,IAAI,mD,6CAKdC,cAAcN,KAAKH,S,+BAInB,OACE,+CAIIO,QAAQC,IAAIL,KAAKN,MAAMC,KAAKY,sBAE7BP,KAAKN,MAAMC,KAAKY,0B,GAlCLC,IAAMC,WCiDXC,G,kNA9CbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,W,EAG7BC,QAAU,WACR,EAAKjB,SAAS,CACZa,UAAWC,KAAKC,MAAsB,GAAhBD,KAAKE,a,EAI/BE,UAAY,WACV,EAAKlB,SAAS,CACZY,gBAAgB,K,EAIpBO,UAAY,WACV,EAAKnB,SAAS,CACZY,gBAAgB,K,uDAKlB,OACE,yBAAKQ,UAAU,OACb,2CACA,4BAAQA,UAAU,aAAaC,KAAK,SAASC,QAASrB,KAAKiB,WAA3D,cAGA,4BAAQE,UAAU,aAAaC,KAAK,SAASC,QAASrB,KAAKkB,WAA3D,cAGA,4BAAQC,UAAU,aAAaC,KAAK,SAASC,QAASrB,KAAKgB,SAA3D,mBAIEhB,KAAKN,MAAMiB,eACP,kBAAC,EAAD,CAAOR,KAAMH,KAAKN,MAAMkB,YACxB,0C,GAxCIJ,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.a717b11c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  timer = setInterval(() => {\n    this.setState({\n      date: new Date(),\n    });\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      /* eslint-disable-next-line no-console */\n      console.log('The Clock was renamed from oldName to newName');\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:&nbsp;\n        {\n          // eslint-disable-next-line\n          console.log(this.state.date.toLocaleTimeString())\n        }\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.floor(Math.random() * 10),\n  }\n\n  setName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 10),\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button className=\"clock__btn\" type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n        <button className=\"clock__btn\" type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n        <button className=\"clock__btn\" type=\"button\" onClick={this.setName}>\n          Set random name\n        </button>\n        {\n          this.state.isClockVisible\n            ? <Clock name={this.state.clockName} />\n            : <></>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}